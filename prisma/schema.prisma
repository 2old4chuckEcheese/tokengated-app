generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String         @id @default(uuid())
  name            String
  email           String         @unique
  image           String?
  role            String         @default("user")
  affiliation     String?
  yearsPlayed     String?
  position        String?
  yearsAffiliated String?
  networking      Boolean        @default(false)
  contactMethod   String?
  industry        String?
  company         String?
  location        String?
  notifyLikes     Boolean        @default(true)
  notifyComments  Boolean        @default(true)
  notifyTags      Boolean        @default(true)
  notifyEvents    Boolean        @default(true)
  donateCounter   Int            @default(0)
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  posts           Post[]
  comments        Comment[]
  interactions    Interaction[]
  notifications   Notification[]
}

model Post {
  id                String     @id @default(uuid())
  author            User       @relation(fields: [authorId], references: [id])
  authorId          String
  content           String
  imageUrl          String?
  linkPreviewImage  String?
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  latestInteraction DateTime
  likes             Like[]
  comments          Comment[]
}

model Comment {
  id        String   @id @default(uuid())
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  content   String
  createdAt DateTime @default(now())
}

model Like {
  id        String   @id @default(uuid())
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
}

model Event {
  id        String   @id @default(uuid())
  title     String
  date      DateTime
  content   String
  imageUrl  String?
  link      String?
  creator   User     @relation(fields: [creatorId], references: [id])
  creatorId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Interaction {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  type      String
  points    Int
  timestamp DateTime @default(now())
}

model Notification {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  type      String
  message   String
  read      Boolean  @default(false)
  link      String?  
  createdAt DateTime @default(now())
}
